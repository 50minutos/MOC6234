USE MASTER

IF EXISTS(SELECT * FROM SYS.DATABASES WHERE NAME = 'DB_OLTP')
BEGIN
	ALTER DATABASE DB_OLTP
	SET SINGLE_USER
	WITH ROLLBACK IMMEDIATE

	DROP DATABASE DB_OLTP
END

CREATE DATABASE DB_OLTP
GO

USE DB_OLTP

CREATE TABLE UF
(
	SIGLA_UF CHAR(2) PRIMARY KEY, 
	NOME_UF VARCHAR(50)
)

CREATE TABLE CIDADE 
(
	COD_CIDADE INT IDENTITY PRIMARY KEY, 
	NOME_CIDADE VARCHAR(50), 
	SIGLA_UF CHAR(2) REFERENCES UF
)

CREATE TABLE CLIENTE
(
	COD_CLIENTE INT IDENTITY PRIMARY KEY, 
	NOME_CLIENTE VARCHAR(50), 
	SEXO_CLIENTE CHAR(1), 
	EMAIL_CLIENTE VARCHAR(100), 
	COD_CIDADE INT REFERENCES CIDADE
)

CREATE TABLE FUNCIONARIO
(
	COD_FUNCIONARIO INT IDENTITY PRIMARY KEY, 
	NOME_FUNCIONARIO VARCHAR(50), 
	DATA_CONTRATACAO_FUNCIONARIO DATE, 
	COD_CIDADE INT REFERENCES CIDADE 
)

CREATE TABLE PRODUTO
(
	COD_PRODUTO INT IDENTITY PRIMARY KEY, 
	NOME_PRODUTO VARCHAR(50), 
	PRECO_PRODUTO DEC(9, 2)
)

CREATE TABLE PEDIDO
(
	COD_PEDIDO INT IDENTITY PRIMARY KEY, 
	DATA_PEDIDO DATE, 
	COD_CLIENTE INT REFERENCES CLIENTE, 
	COD_FUNCIONARIO INT REFERENCES FUNCIONARIO
)

CREATE TABLE ITEM_PEDIDO
(
	COD_ITEM_PEDIDO INT IDENTITY PRIMARY KEY, 
	COD_PEDIDO INT REFERENCES PEDIDO, 
	COD_PRODUTO INT REFERENCES PRODUTO, 
	QTD_ITEM_PEDIDO INT, 
	PRECO_ITEM_PEDIDO DEC(9, 2)
)

INSERT UF
VALUES ('SP', 'SÃO PAULO'), 
	('MG', 'MINAS GERAIS'), 
	('ES', 'ESPÍRITO SANTO'), 
	('RJ', 'RIO DE JANEIRO'), 
	('RS', 'RIO GRANDE DO SUL'), 
	('PR', 'PARANÁ'), 
	('SC', 'SANTA CATARINA'), 
	('AC', 'ACRE'), 
	('RO', 'RONDÔNIA'), 
	('RR', 'RORAIMA'), 
	('AM', 'AMAZONAS'), 
	('PA', 'PARÁ'), 
	('MA', 'MARANHÃO'), 
	('PI', 'PIAUÍ'), 
	('CE', 'CEARÁ'), 
	('RN', 'RIO GRANDE DO NORTE'), 
	('PB', 'PARAÍBA'), 
	('PE', 'PERNAMBUCO'), 
	('AL', 'ALAGOAS'), 
	('SE', 'SERGIPE'), 
	('BA', 'BAHIA'), 
	('MT', 'MATO GROSSO'), 
	('MS', 'MATO GROSSO DO SUL'), 
	('TO', 'TOCANTINS'), 
	('GO', 'GOIÁS'), 
	('DF', 'DISTRITO FEDERAL')

INSERT CIDADE
VALUES ('SÃO PAULO', 'SP'), 
	('CAMPINAS', 'SP'), 
	('SOROCABA', 'SP'), 
	('POUSO ALEGRE', 'MG'), 
	('BELO HORIZONTE', 'MG'), 
	('VITÓRIA', 'ES'), 
	('MANTENA', 'ES'), 
	('MANAUS', 'AM')

INSERT CLIENTE 
VALUES ('ADÃO', 'M', 'ADAO@LIVE.COM', 1), 
	('EVA', 'F', 'EVA@LIVE.COM', 2)

INSERT FUNCIONARIO
VALUES ('CAIM', '20130204', 4), 
	('ABEL', '20130601', 8)

INSERT PRODUTO 
VALUES ('MARTELO', 10.10), 
('MARRETA', 20.20), 
('SERROTE', 30.30), 
('MACHADO', 40.40)

INSERT PEDIDO
VALUES ('20120103', 1, 1), 
	('20120212', 2, 1), 
	('20130403', 1, 1), 
	('20130403', 1, 2), 
	('20130502', 1, 2), 
	('20130502', 2, 2)

INSERT ITEM_PEDIDO
VALUES (1, 1, 1, 10.10), 
	(1, 2, 1, 20.20), 
	(1, 3, 10, 30.30), 
	(2, 1, 1, 10.10), 
	(2, 3, 2, 30.30), 
	(3, 1, 1, 10.10), 
	(4, 4, 1, 40.40), 
	(5, 1, 1, 10.10), 
	(5, 2, 1, 20.20), 
	(5, 3, 1, 30.30), 
	(5, 4, 5, 40.40), 
	(6, 4, 100, 40.40)

-------------

USE MASTER

IF EXISTS(SELECT * FROM SYS.DATABASES WHERE NAME = 'DB_OLAP')
BEGIN
	ALTER DATABASE DB_OLAP
	SET SINGLE_USER
	WITH ROLLBACK IMMEDIATE

	DROP DATABASE DB_OLAP
END

CREATE DATABASE DB_OLAP
GO

--VOLUME DE VENDAS
--VOLUME DE VENDAS POR VENDEDOR DA REGIAO SUDESTE
--VOLUME DE VENDAS POR UF
--VOLUME DE VENDAS POR CIDADE
--VOLUME DE VENDAS POR VENDEDOR
--VOLUME DE VENDAS POR CLIENTE
--VOLUME DE VENDAS POR CLIENTE POR SEXO
--VOLUME DE VENDAS POR PRODUTO
--VOLUME DE VENDAS DE UM PRODUTO POR VENDEDOR
--VOLUME DE VENDAS DE UM PRODUTO POR CLIENTE
--TUDO ISSO TOTALIZADO POR ANO, MES E DIA

USE DB_OLAP

CREATE TABLE DIMENSAO_UF --ONDE
(
	SIGLA_UF CHAR(2)PRIMARY KEY, 
	NOME_UF VARCHAR(50)	
)

CREATE TABLE DIMENSAO_CIDADE --ONDE
(
	COD_CIDADE INT PRIMARY KEY, 
	NOME_CIDADE VARCHAR(50), 
	SIGLA_UF CHAR(2) REFERENCES DIMENSAO_UF
)

CREATE TABLE DIMENSAO_CLIENTE --QUEM
(
	COD_CLIENTE INT PRIMARY KEY, 
	NOME_CLIENTE VARCHAR(50),
	SEXO_CLIENTE CHAR(1),
	EMAIL_CLIENTE VARCHAR(100),  
	COD_CIDADE INT REFERENCES DIMENSAO_CIDADE
)

CREATE TABLE DIMENSAO_FUNCIONARIO --QUEM
(
	COD_FUNCIONARIO INT PRIMARY KEY, 
	NOME_FUNCIONARIO VARCHAR(50),
	COD_CIDADE INT REFERENCES DIMENSAO_CIDADE
)

CREATE TABLE DIMENSAO_PRODUTO --O QUE
(
	COD_PRODUTO INT PRIMARY KEY,
	NOME_PRODUTO VARCHAR(50)
)

CREATE TABLE DIMENSAO_TEMPO --QUANDO
(
	DATA DATE PRIMARY KEY, 
	ANO INT, 
	MES INT
)

CREATE TABLE FATO_VENDA
(
	DATA_PEDIDO DATE REFERENCES DIMENSAO_TEMPO, 
	COD_CLIENTE INT REFERENCES DIMENSAO_CLIENTE, 
	COD_FUNCIONARIO INT REFERENCES DIMENSAO_FUNCIONARIO, 
	COD_PRODUTO INT REFERENCES DIMENSAO_PRODUTO, 
	PRECO_ITEM_PEDIDO DEC(9, 2), 
	QTD_ITEM_PEDIDO INT
)

-------------

--USAR SSIS PARA IMPORTAR OS DADOS (ETL)
--NESTE EXEMPLO USAREI O SSMS, MESMO

-------------

INSERT DIMENSAO_UF
SELECT *
FROM DB_OLTP..UF

INSERT DIMENSAO_CIDADE
SELECT *
FROM DB_OLTP..CIDADE

INSERT DIMENSAO_CLIENTE 
SELECT *
FROM DB_OLTP..CLIENTE

INSERT DIMENSAO_FUNCIONARIO
SELECT COD_FUNCIONARIO, 
	NOME_FUNCIONARIO, 
	COD_CIDADE 
FROM DB_OLTP..FUNCIONARIO

INSERT DIMENSAO_PRODUTO
SELECT COD_PRODUTO, 
	NOME_PRODUTO
FROM DB_OLTP..PRODUTO

INSERT DIMENSAO_TEMPO
SELECT DISTINCT DATA_PEDIDO, 
	YEAR(DATA_PEDIDO), 
	MONTH(DATA_PEDIDO)
FROM DB_OLTP..PEDIDO

INSERT FATO_VENDA
SELECT P.DATA_PEDIDO, 
	P.COD_CLIENTE, 
	P.COD_FUNCIONARIO, 
	IP.COD_PRODUTO, 
	IP.PRECO_ITEM_PEDIDO, 
	IP.QTD_ITEM_PEDIDO
FROM DB_OLTP..PEDIDO P 
JOIN DB_OLTP..ITEM_PEDIDO IP
	ON P.COD_PEDIDO = IP.COD_PEDIDO

-------------

--USAR O ANALYSIS SERVICES PARA CRIAR O "CUBO" 

/*

01 - CRIAR O PROJETO SSAS

02 - CRIAR O DATA SOURCE 'DB OLAP' APONTANDO PARA DB_OLAP

03 - CRIAR O DATA SOURCE VIEW 'DB OLAP' COM TODAS AS TABELAS

04 - CRIAR UMA NAMED CALCULATION EM FATO_VENDA 'TOTAL_ITEM_PEDIDO' => 
     QTD_ITEM_PEDIDO * PRECO_ITEM_PEDIDO

05 - CRIAR UMA NAMED CALCULATION EM DIMENSAO_CLIENTE 'DESCRICAO_SEXO_CLIENTE' => 
     CASE SEXO_CLIENTE
	    WHEN 'M' THEN 'MASCULINO'
	    WHEN 'F' THEN 'FEMININO'
	    ELSE NULL
     END

06 - CRIAR A DIMENSION 'DIMENSAO TEMPO' SELECIONANDO A TABELA DIMENSAO_TEMPO
     ASSOCIAR DATA -> CALENDAR.DATE, MES -> CALENDAR.MONTH, ANO -> CALENDAR.YEAR
     CRIAR A HIERARQUIA ANO -> MES -> DATA
     RELACIONAR OS ATRIBUTOS DATA -> MES -> ANO
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR A HIERARQUIA NO BROWSER

07 - CRIAR A DIMENSION 'DIMENSAO FUNCIONARIO' SELECIONANDO A TABELA DIMENSAO_FUNCIONARIO
     SELECIONAR TODOS OS ATRIBUTOS, EXCETO 'SIGLA UF' E 'COD CIDADE'
     CRIAR A HIERARQUIA NOME UF -> NOME CIDADE -> COD FUNCIONARIO
     RELACIONAR 'COD FUNCIONARIO' -> 'NOME CIDADE' -> 'NOME UF'
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR A HIERARQUIA NO BROWSER
     
08 - CRIAR A DIMENSION 'DIMENSAO CLIENTE' SELECIONANDO A TABELA DIMENSAO_CLIENTE
     SELECIONAR TODOS OS ATRIBUTOS, EXCETO 'SIGLA UF', 'COD CIDADE' E 'SEXO CLIENTE'
     CRIAR A HIERARQUIA NOME UF -> NOME CIDADE -> COD CLIENTE
     RELACIONAR 'COD CLIENTE' -> 'NOME CIDADE' -> 'NOME UF'
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR A HIERARQUIA NO BROWSER
     
09 - CRIAR A DIMENSION 'DIMENSAO PRODUTO' SELECIONANDO A TABELA DIMENSAO_PRODUTO
     SELECIONAR TODOS OS ATRIBUTOS
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER
     
10 - CRIAR O CUBE 'DB OLAP' SELECIONANDO APENAS A TABELA FATO_VENDA
     ALTERAR O FORMAT STRING DE 'PRECO ITEM PEDIDO' E 'TOTAL ITEM PEDIDO' PARA CURRENCY
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

11 - CRIAR UM CALCULATED MEMBER [COMISSAO FUNCIONARIO] => 
     [Measures].[TOTAL ITEM PEDIDO] * 0.03
     ASSOCIAR COM O MEASURE GROUP 'FATO VENDA'
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

12 - CRIAR UM NAMED SET [FUNCIONARIOS DA REGIAO SUDESTE] =>
     {
        [DIMENSAO FUNCIONARIO].[NOME UF].[SÃO PAULO], 
        [DIMENSAO FUNCIONARIO].[NOME UF].[MINAS GERAIS], 
        [DIMENSAO FUNCIONARIO].[NOME UF].[RIO DE JANEIRO], 
        [DIMENSAO FUNCIONARIO].[NOME UF].[ESPÍRITO SANTO]
     }
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

13 - CRIAR A KPI 'DESEMPENHO FUNCIONARIO'
     ASSOCIAR AO MEASURE GROUP 'FATO VENDA'
     VALUE =>
     [Measures].[TOTAL ITEM PEDIDO]
     GOAL => 
     100
     STATUS =>
     CASE 
        WHEN KPIVALUE("DESEMPENHO FUNCIONARIO") / KPIGOAL("DESEMPENHO FUNCIONARIO") >= 0.95 THEN 1
        WHEN KPIVALUE("DESEMPENHO FUNCIONARIO") / KPIGOAL("DESEMPENHO FUNCIONARIO") < 0.85 THEN -1
        ELSE 0
     END
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

14 - CRIAR UMA DRILLTROUGH ACTION 'PRODUTOS VENDIDOS'
     SELECIONAR AS COLUNAS 'NOME PRODUTO', 'QTD ITEM PEDIDO' E 'PRECO ITEM PEDIDO' 
     CAPTION => 
     PRODUTOS VENDIDOS
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

16 - CRIAR O NAMED CALCULATION 'NOME_MES' =>
     DATENAME(MM, DATA)
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

17 - ADICIONAR O ATRIBUTO NOME_MES À DIMENSION 'DIMENSAO TEMPO'
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

18 - CONFIGURAR O ATRIBUTO 'MES' PARA APRESENTAR O 'NOME MES' 
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

19 - CRIAR O NAMED CALCULATION 'NOME_MES_PT_BR' =>
     CASE MES
        WHEN 1 THEN 'JAN'
        WHEN 2 THEN 'FEV'
        WHEN 3 THEN 'MAR'
        WHEN 4 THEN 'ABR'
        WHEN 5 THEN 'MAI'
        WHEN 6 THEN 'JUN'
        WHEN 7 THEN 'JUL'
        WHEN 8 THEN 'AGO'
        WHEN 9 THEN 'SET'
        WHEN 10 THEN 'OUT'
        WHEN 11 THEN 'NOV'
        WHEN 12 THEN 'DEZ'
     END
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

20 - ADICIONAR O ATRIBUTO NOME_MES_PT_BR À DIMENSION 'DIMENSAO TEMPO'
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER
     
21 - CONFIGURAR O ATRIBUTO 'MES' PARA APRESENTAR O 'NOME MES PT BR' 
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

22 - CRIAR A PERSPECTIVE 'VENDAS', SELECIONANDO 
        [FATO VENDA].[TOTAL ITEM PEDIDO]
        [DIMENSAO PRODUTO].[NOME PRODUTO]
        [DIMENSAO CLIENTE].[HIERARCHY]
        [DIMENSAO TEMPO].[HIERARCHY]
        [DIMENSAO FUNCIONARIO].[HIERARCHY]
        [FUNCIONARIOS DA REGIAO SUDESTE]
        [COMISSAO FUNCIONARIO]
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

23 - EDITAR A PARTITION 'FATO VENDA'
     ALTERAR O BINDING TYPE PARA QUERY BINDING
     ACRESCENTAR O WHERE AO COMANDO =>
     WHERE YEAR(DATA_PEDIDO) < 2013

24 - CRIAR UMA NOVA PARTITION 'FATO VENDA 2013' 
     ALTERAR O BINDING TYPE PARA QUERY BINDING
     ACRESCENTAR O WHERE AO COMANDO =>
     WHERE YEAR(DATA_PEDIDO) = 2013
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

25 - CRIAR A AGGREGATION 'AGREGADO' USANDO DEFAULT COMO PADRÃO
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

26 - TRADUZIR TODOS OS CAPTIONS PARA PT-BR
     FAZER O DEPLOY E PROCESSAR
     VERIFICAR NO BROWSER

27 - CRIAR A ROLE ANALISTA COM PERMISSÃO DE LEITURA DOS DADOS

28 - FAZER O DEPLOY USANDO O BIDS

29 - FAZER O DEPLOY USANDO O DEPLOYMENT WIZARD

30 - FAZER UM BACKUP/RESTORE DO DATABASE

31 - BAIXAR E ATACHAR O DATABASE ADVENTUREWORKSDW2008
     http://msftdbprodsamples.codeplex.com/releases/view/59211
     
32 - CRIAR O PROJETO SSAS

33 - CRIAR O DATA SOURCE 'AW' APONTANDO PARA DB_OLAP

34 - CRIAR O DATA SOURCE VIEW 'AW' COM AS TABELAS => 
     DBO.PRODPECTIVEBUYER
     DBO.VTARGETMAIL

35 - 

*/

-------------
